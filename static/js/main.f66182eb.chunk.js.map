{"version":3,"sources":["components/ProjectList.js","components/ProjectStats.js","DivvyDashboard.js","index.js"],"names":["DivvyAvatar","styled","Avatar","backgroundColor","ProjectList","props","projects","update","active","List","map","project","i","ListItem","button","onClick","style","ListItemAvatar","src","contract","width","ListItemText","primary","name","secondary","symbol","web3","Web3","fBNBcontract","eth","Contract","abi","NumberFormatter","Intl","NumberFormat","maximumSignificantDigits","ProjectStats","useState","burnt","setBrunt","liquidity","setLiquidity","fbnb","setFbnb","supply","setSupply","backing","setBacking","backingPerToken","setBackingPerToken","percent","setPercent","angle","setAngle","divvyBalance","setDivvyBalance","infoJSON","setInfoJSON","sd_abi","useEffect","axios","get","then","resp","data","methods","balanceOf","call","err","Math","pow","getBalance","totalSupply","_totalSupply5","oneTokentoBacking","_totalSupply1","console","log","_totalSupply2","PI","Grid","container","item","xs","direction","alignSelf","alt","logo","borderRadius","marginTop","spacing","alignContent","website","Tooltip","title","IconButton","href","target","widgetButtonColor","color","widgetTextColor","social","twitter","telegram","xDomain","yDomain","height","transform","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","Typography","textAlign","top","position","fontSize","fontWeight","toFixed","display","sx","bgcolor","format","divvyFund","widgetTheme","DivvyDashboard","activeProject","setActiveProject","className","CssBaseline","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f66182eb.chunk.js","sourcesContent":["import {Avatar, List, ListItem, ListItemAvatar, ListItemText, styled} from \"@mui/material\";\n\nconst DivvyAvatar = styled(Avatar)({\n    backgroundColor: 'transparent'\n})\n\nexport default function ProjectList(props) {\n\n    const {projects, update, active} = props;\n\n    return (\n        <List>\n            {\n                projects.map((project, i) => {\n                    return <ListItem\n                        key={project.symbol}\n                        button\n                        onClick={() => update(i)}\n                        style={{backgroundColor: active === i ? '#eee' : ''}}\n                    >\n                        <ListItemAvatar>\n                            <DivvyAvatar>\n                                <img\n                                    src={`https://fegexchange.github.io/assets/blockchains/smartchain/assets/${project.contract}/logo.png`}\n                                    width={40}/>\n                            </DivvyAvatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={project.name} secondary={project.symbol}/>\n                    </ListItem>\n                })\n            }\n        </List>\n    )\n}","import Web3 from 'web3';\nimport {useEffect, useState} from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\n\nimport {\n    Avatar, CircularProgress,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Tooltip,\n    Typography\n} from \"@mui/material\";\n\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport CachedIcon from '@mui/icons-material/Cached';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport ShieldIcon from '@mui/icons-material/Shield';\nimport CalculateIcon from '@mui/icons-material/Calculate';\nimport WebAssetIcon from '@mui/icons-material/WebAsset';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport TelegramIcon from '@mui/icons-material/Telegram';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\n\nimport abi from '../abis/abi.json';\nimport sd_abi from '../abis/sd_abi.json';\nimport axios from \"axios\";\n\nconst web3 = new Web3('https://bsc-dataseed.binance.org/');\n\nconst divvyContract = '0xe9490A983292bD844074Ac3e83c3cb408f578b61';\nconst fBNBContract = '0x87b1AccE6a1958E522233A737313C086551a5c76';\nconst deadWallet = '0x000000000000000000000000000000000000dead';\nconst divvyWallet = '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe';\n\nconst fBNBcontract = new web3.eth.Contract(abi, fBNBContract)\n\nconst NumberFormatter = new Intl.NumberFormat('en-US', {\n    maximumSignificantDigits: 5\n});\n\nexport default function ProjectStats(props) {\n\n    const {project} = props;\n\n    const [burnt, setBrunt] = useState(0);\n    const [liquidity, setLiquidity] = useState(0);\n    const [fbnb, setFbnb] = useState(0);\n    const [supply, setSupply] = useState(0);\n    const [backing, setBacking] = useState(0);\n    const [backingPerToken, setBackingPerToken] = useState(0);\n    const [percent, setPercent] = useState(0);\n    const [angle, setAngle] = useState(0);\n    const [divvyBalance, setDivvyBalance] = useState(0);\n    const [infoJSON, setInfoJSON] = useState({});\n\n    const contract = new web3.eth.Contract(sd_abi, project.contract)\n\n    useEffect(() => {\n\n        axios\n            .get(`https://fegexchange.github.io/assets/blockchains/smartchain/assets/${project.contract}/info.json`)\n            .then(resp => {\n                setInfoJSON(resp.data);\n            })\n\n        //balance of fBNB in Divvy\n        fBNBcontract.methods.balanceOf(project.contract).call((err, resp) => {\n            if (!err) {\n                setFbnb(resp / Math.pow(10, 18))\n            }\n        })\n\n        //balance of divvy in Liquidity\n        contract.methods.getBalance(project.contract).call((err, resp) => {\n            if (!err) {\n                setLiquidity(resp / Math.pow(10, 9))\n            }\n        })\n\n        // contract.methods.balanceOf(divvyContract).call((err, resp) => {\n        //     if (!err) {\n        //         setLiquidity(resp / Math.pow(10, 9))\n        //     }\n        // })\n\n        //balance of divvy in dead wallet\n        contract.methods.balanceOf(deadWallet).call((err, resp) => {\n            if (!err) {\n                setBrunt(resp / Math.pow(10, 9))\n            }\n        })\n\n        //total supply\n        contract.methods.totalSupply().call((err, resp) => {\n            if (!err) {\n                setSupply(resp / Math.pow(10, 9))\n            }\n        })\n\n        //asset backing\n        contract.methods._totalSupply5().call((err, resp) => {\n            if (!err) {\n                setBacking(resp / Math.pow(10, 18))\n            }\n        })\n\n        //backing per token\n        contract.methods.oneTokentoBacking().call((err, resp) => {\n            if (!err) {\n                setBackingPerToken(resp / Math.pow(10, 18))\n            }\n        })\n\n        contract.methods._totalSupply1().call((err, resp) => {\n            console.log('_totalSupply1', resp / Math.pow(10, 9), err)\n        })\n\n        contract.methods._totalSupply2().call((err, resp) => {\n            console.log('_totalSupply2', resp / Math.pow(10, 9), err)\n        })\n\n        //balance of tokens in Divvy Fund\n        contract.methods.balanceOf(divvyWallet).call((err, resp) => {\n            if (!err) {\n                setDivvyBalance(resp / Math.pow(10, 9))\n            }\n        })\n\n    }, [project]);\n\n    useEffect(() => {\n        if (burnt && supply) {\n            setPercent(burnt / supply);\n            setAngle(360 * (burnt / supply) * (Math.PI / 180))\n        }\n    }, [burnt, supply]);\n\n    const getWidgetCSS = () => {\n        return `\n                /* Button Color */\n                .sd-widget-toolbar-nav>div.sd-widget-toolbar-nav-active,\n                .sd-widget-bottom button,\n                .sd-widget-bottom button:hover{\n                background-color: ${project.widgetButtonColor};\n            }\n\n                /* Background color for toggle button */\n                .sd-widget-bottom button.Mui-disabled {\n                background-color: ${project.widgetButtonColor};\n            }\n\n                /* Background color for disabled button */\n                .sd-widget-bottom button.MuiIconButton-root {\n                color: ${project.widgetTextColor};\n                background-color: ${project.widgetButtonColor};\n            }\n            `;\n    }\n\n    // if(loading){\n    //     return(<Grid container>\n    //         <Grid item xs={12}>\n    //             <div style={{width: 100, margin: '0 auto'}}>\n    //                 <CircularProgress style={{color: '#872eff'}} size={100} />\n    //             </div>\n    //         </Grid>\n    //     </Grid>);\n    // }\n\n    return (<Grid container>\n\n        <Grid item xs={4}>\n            <Grid container direction=\"column\">\n                <Grid item alignSelf=\"center\">\n                    <img\n                        src={`https://fegexchange.github.io/assets/blockchains/smartchain/assets/${project.contract}/logo.png`}\n                        alt={`${project.logo} Logo`}\n                        style={{borderRadius: '50%', marginTop: 40}}\n                    />\n                </Grid>\n                <Grid item alignSelf=\"center\">\n                    <Grid container spacing={2} alignContent=\"center\">\n\n                        {\n                            infoJSON.website && <Grid item>\n                                <Tooltip title=\"Website\">\n                                    <IconButton\n                                        href={infoJSON.website}\n                                        target=\"_blank\"\n                                        style={{\n                                            backgroundColor: project.widgetButtonColor,\n                                            color: project.widgetTextColor\n                                        }}\n                                    >\n                                        <WebAssetIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        }\n\n                        {\n                            infoJSON.social && infoJSON.social.twitter && <Grid item>\n                                <Tooltip title=\"Twitter\">\n                                    <IconButton\n                                        href={infoJSON.social.twitter}\n                                        target=\"_blank\"\n                                        style={{\n                                            backgroundColor: project.widgetButtonColor,\n                                            color: project.widgetTextColor\n                                        }}\n                                    >\n                                        <TwitterIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        }\n                        {\n                            infoJSON.social && infoJSON.social.telegram && <Grid item>\n                                <Tooltip title=\"Telegram\">\n                                    <IconButton\n                                        href={infoJSON.social.telegram}\n                                        target=\"_blank\"\n                                        style={{\n                                            backgroundColor: project.widgetButtonColor,\n                                            color: project.widgetTextColor\n                                        }}\n                                    >\n                                        <TelegramIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        }\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n\n        <Grid item xs={8}>\n            {/*<style>{getWidgetCSS()}</style>*/}\n            {/*<div*/}\n            {/*    id=\"sd-widget\"*/}\n            {/*    data-chain={56}*/}\n            {/*    data-token={project.contract}*/}\n            {/*    data-theme={project.widgetTheme}*/}\n            {/*    style={{margin: '0 auto'}}*/}\n            {/*/>*/}\n        </Grid>\n\n        <Grid item xs={12} style={{marginTop: 40}}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <FlexibleWidthXYPlot\n                        xDomain={[-5, 5]}\n                        yDomain={[-5, 5]}\n                        height={300}\n                        style={{\n                            transform: 'translate(-15px, 5px)',\n                        }}\n                        // className={classes.xyplot}\n                    >\n                        <ArcSeries\n                            radiusDomain={[0, 10]}\n                            center={{x: 0, y: 0}}\n                            data={[\n                                {\n                                    angle0: 0,\n                                    angle: Math.PI * 2,\n                                    opacity: 1,\n                                    radius: 6.75,\n                                    radius0: 6,\n                                    color: '#eee',\n                                },\n                                {\n                                    angle0: 0,\n                                    angle: angle,\n                                    opacity: 1,\n                                    radius: 8.5,\n                                    radius0: 6,\n                                    color: project.color,\n                                },\n                            ]}\n                            colorType={'literal'}\n                        />\n                    </FlexibleWidthXYPlot>\n                    <Typography\n                        style={{\n                            height: 0,\n                            width: '100%',\n                            textAlign: 'center',\n                            top: -190,\n                            position: 'relative',\n                            fontSize: 30,\n                            fontWeight: '700',\n                            color: project.color\n                        }}\n                    >\n                        {(percent * 100).toFixed(2)}\n                        <span\n                            style={{\n                                fontSize: 12,\n                                fontWeight: '400',\n                                marginTop: -10,\n                                display: 'block',\n                            }}\n                        >\n          % BURNED\n        </span>\n                    </Typography>\n                </Grid>\n                <Grid item xs={6} style={{marginTop: 20}}>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><AccountBalanceIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(supply) + ` ${project.symbol}`}\n                                          secondary=\"Total Supply\"/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><LocalFireDepartmentIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(burnt) + ` ${project.symbol}`}\n                                          secondary=\"Burnt Supply\"/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><CachedIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(supply - burnt) + ` ${project.symbol}`}\n                                          secondary=\"Circulating Supply\"/>\n                        </ListItem>\n                    </List>\n                </Grid>\n                <Grid item xs={6}>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><LocalOfferIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format((fbnb - backing) / liquidity) + \" BNB\"}\n                                          secondary=\"Price\"/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><ShieldIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(backingPerToken) + \" fBNB\"}\n                                          secondary=\"Backing Per Token\"/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><CalculateIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={(((fbnb - backing) / liquidity) / backingPerToken).toFixed(2) + \"x\"}\n                                          secondary=\"Baseline To Market Factor\"/>\n                        </ListItem>\n                    </List>\n                </Grid>\n                <Grid item xs={6}>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><AttachMoneyIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(liquidity) + ` ${project.symbol}`}\n                                          secondary={`Liquidity ${project.symbol}`}/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><AttachMoneyIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(fbnb - backing) + \" fBNB\"}\n                                          secondary=\"Liquidity fBNB\"/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: project.color}}><ShieldIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(backing) + \" fBNB\"}\n                                          secondary=\"Total Backing\"/>\n                        </ListItem>\n                    </List>\n                </Grid>\n                <Grid item xs={6}>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: '#872eff'}}><AccountBalanceWalletIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(divvyBalance) + ` ${project.symbol}`}\n                                          secondary={`Divvy Fund Balance`}/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: '#872eff'}}><AttachMoneyIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(divvyBalance * ((fbnb - backing) / liquidity)) + ` BNB`}\n                                          secondary={`Divvy Fund Value`}/>\n                        </ListItem>\n                    </List>\n                </Grid>\n                <Grid item xs={6}>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: '#872eff'}}><AccountBalanceWalletIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format(divvyBalance - project.divvyFund) + ` ${project.symbol}`}\n                                          secondary={`Divvy Fund Reflections`}/>\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar sx={{bgcolor: '#872eff'}}><AttachMoneyIcon/></Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={NumberFormatter.format((divvyBalance - project.divvyFund) * ((fbnb - backing) / liquidity)) + ` BNB`}\n                                          secondary={`Divvy Fund Reflections Value`}/>\n                        </ListItem>\n                    </List>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>)\n}","import ProjectList from \"./components/ProjectList\";\nimport ProjectStats from \"./components/ProjectStats\";\nimport {CssBaseline, Grid} from \"@mui/material\";\nimport {useState} from \"react\";\n\nconst projects = [\n    {\n        contract: '0xa3D522c151aD654b36BDFe7a69D0c405193A22F9',\n        name: 'ROX Token',\n        symbol: 'ROX',\n        color: '#000',\n        widgetButtonColor: '#FFF',\n        widgetTextColor: '#000',\n        widgetTheme: 'dark'\n    },\n    {\n        contract: '0xe9490A983292bD844074Ac3e83c3cb408f578b61',\n        name: 'Divvy',\n        symbol: 'DIVVY',\n        color: '#872eff',\n        widgetButtonColor: '#872eff',\n        widgetTextColor: '#FFF'\n    },\n    {\n        contract: '0x87b1AccE6a1958E522233A737313C086551a5c76',\n        name: 'FEG Wrapped BNB',\n        symbol: 'fBNB'\n    },\n    {\n        contract: '0xD6C8dd77411dc9B5FA8327063Cb2e671E243f419',\n        name: 'MESK',\n        symbol: '$MESK',\n        color: '#f8d207',\n        widgetButtonColor: '#f8d207',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0xCD409c394c126C96806D501FaeAb7e6dB0A74E10',\n        name: 'BunnyDoge',\n        symbol: 'BND',\n        color: '#614303',\n        widgetButtonColor: '#614303',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0xCfE058c0646c0Eec7e042744D9B8787d0f047a34',\n        name: 'DEGEN TRADERS',\n        symbol: 'DEGEN',\n        color: '#000',\n        widgetButtonColor: '#000',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x288E1425395ffC5445013ce22856901F78Cd9851',\n        name: 'Family Token',\n        symbol: 'DOM',\n        color: '#000',\n        widgetButtonColor: '#000',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x97d839ac3Ed733d7FD0d353d4573f7fb02d7A8E3',\n        name: 'Frontline Heroes Token',\n        symbol: 'FHT',\n        color: '#02008d',\n        widgetButtonColor: '#02008d',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x1C9F1de07E8F65Ee0A96e616F705735a1D0B031b',\n        name: 'Go Green Global',\n        symbol: 'GGGSMART',\n        color: '#0c7504',\n        widgetButtonColor: '#0c7504',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x6A6014231B86e111974a07842e4D5e29c7F01bD1',\n        name: 'Hold & Win',\n        symbol: 'HAW',\n        color: '#bababa',\n        widgetButtonColor: '#bababa',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0xf451CeD7a5C052532a2Cf635E80CCA65C357628F',\n        name: 'MOON SmartDeFi',\n        symbol: 'MOON',\n        color: '#018378',\n        widgetButtonColor: '#018378',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x383A948C3B33A5F951A5f57c01DE4F192522Afe0',\n        name: 'Smart Ants',\n        symbol: 'SANTS',\n        color: '#27c3d8',\n        widgetButtonColor: '#27c3d8',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x252C41c6de973e4D31c770ED6a211BFAA699eB60',\n        name: 'Smart Inu',\n        symbol: 'SINU',\n        divvyFund: 6900000000,\n        color: '#1b93fb',\n        widgetButtonColor: '#1b93fb',\n        widgetTextColor: '#FFF',\n        widgetTheme: 'light'\n    },\n    {\n        contract: '0x3481Ae06214239A896c618Bb1C80E0E94Ab9D306',\n        name: 'The Kraken',\n        symbol: 'THEKRAKEN',\n        color: '#02a69c',\n        widgetButtonColor: '#02a69c',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0x61AF471DF5c3889de136fA0a17dA651FEDA83A88',\n        name: 'Wolfi Land',\n        symbol: 'WOLFILAND',\n        color: '#3bd553',\n        widgetButtonColor: '#3bd553',\n        widgetTextColor: '#fff'\n    },\n    {\n        contract: '0xC829525793D5b7Ae05a18dB663264edd7dfDba2b',\n        name: 'YIN & YANG',\n        symbol: 'YINCHI',\n        color: '#8c979d',\n        widgetButtonColor: '#8c979d',\n        widgetTextColor: '#000'\n    }\n]\n\n\nfunction DivvyDashboard() {\n\n    const [activeProject, setActiveProject] = useState(0);\n\n    return (\n        <div className=\"DivvyDashboard\">\n            <CssBaseline />\n            <Grid container>\n                <Grid item xs={3}>\n                    <ProjectList projects={projects} update={setActiveProject} active={activeProject}/>\n                </Grid>\n\n                <Grid item xs={9} style={{padding: 40}}>\n                    <ProjectStats project={projects[activeProject]} />\n                </Grid>\n            </Grid>\n\n        </div>\n    );\n}\n\nexport default DivvyDashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DivvyDashboard from './DivvyDashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DivvyDashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}